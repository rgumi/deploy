apiVersion: v1
kind: Service
metadata:
  name: depoy-svc
  namespace: ingress-depoy
  annotations:
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"

spec:
  type: NodePort
  ports:
    - name: gateway
      port: 8080
      targetPort: 8080
      nodePort: 30800
    - name: admin
      port: 8081
      targetPort: 8081
      nodePort: 30801
  selector:
    app: depoy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: depoy
  namespace: ingress-depoy
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: depoy
  template:
    metadata:
      labels:
        app: depoy
    spec:
      containers:
        - name: depoy
          imagePullPolicy: Always
          args:
            - "--global.loglevel=4"
            - "--global.configfile=/etc/depoy/gateway-config.yaml"
            - "--global.persistconfig=false"
            - "--statemgt.prefix=/depoy/"
          image: depoy
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 64Mi
          ports:
            - name: gateway
              containerPort: 8080
              protocol: TCP
            - name: admin
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 3
          volumeMounts:
            - name: depoy-config-volume
              mountPath: /etc/depoy/
      volumes:
        - name: depoy-config-volume
          configMap:
            defaultMode: 0555
            name: depoy-server-conf
